CHAPTER 2 (short sightseeing tout of a city)

C++ is a compiled language (necessity).
Compilers produce object files. These are linked, yielding an executable program.

A C++ programhas many source code files, calles "source files".

An executable program is not portable. Yet, the source code can be compiled and run on a variety of systems.

The ISO C++ standard defines two kinds of entities:
    - Core language features (char, int, etc.) and loops (for and while)
    - Standard-library components (containers [vector, map, etc] and I/O operations [<<, getline(), etc.])

The standard-library is ordinary C++ code. 
C++ is expressive and efficient enough for the most demanding system tasks.

C++ is a statically typed language.
The type of every entity (object, value, name and expression) must be given to compile.
The type of an object determine the set of operations applicable to it.

// Code start

in hello.cpp

int main(){} // defines a function called main. 
// main takes no arguments and does nothing.

{} // expresses groupings. 
// they indicate the stat and end of the function.

// comments in cpp
// comments are ignored by the compiler


// Code end

A C++ program must have exactly one global function named main().
The program starts by executing the main function.

The value the main function returns (int, if any) is returned to the system.
If main() doesn't return a value, the system will receive a value nonetheless. A value indicating success.
If main() returns a nonzero value, it indicates failure.

Not every system  make use of that return value. Linux/Unix often do, Windows rarely do.

// Code start

in hello.cpp

#include <iostream>

int main(0
{
    std::cout << "Hello, World!\n";
}

// Code end




notation

model of memory

model of computation

code organization (procedural programming)

CHAPTER 3

abstraction mechanism

CHAPTER 6 (SYSTEMATIC PRESENTATION) (if 2nd is confusing)

/// Definitions

machine code
context switching
static typing
dynamic typing
compiler
garbage management
scripting
memory allocation

