C++ is compiled.

When you program in C++, you mainly go through 4 phases during development:

    Code — writing the program
    Save — saving the program
    Compile — compiling via the terminal
    Execute — executing via the terminal

    Debug (after this cycle)

Compiling is translating the C++ program and creating a machine code file called a.out.

The executable file will then be loaded to computer memory and the computer’s CPU (Central Processing Unit) executes the program one instruction at a time.

The a stands for “assembler” and the out stands for “output”.

If you’ve compiled a program and have executed the executable named a.out, even after you remove the source code, the executable runs. That’s pretty much the meaning of “executable”.

So the output of the compiler is assembled and this assembled output is a.out.

name the executable: 

g++ hello.cpp -o hello

-----------------

long comments

/* This is all commented.
std::cout << "hi!";
None of this is going to run! */

------------------

Every variable has a type, which represents the kind of information you can store inside of it. It tells your compiler how much memory to set aside for the variable, and it defines what you can do with the variabl

